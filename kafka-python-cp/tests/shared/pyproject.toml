[tool.poetry]
name = "kafka-python"
version = "0.1.0"
description = ""
authors = ["klarna"]

[tool.poetry.dependencies]
python = "^3.10"
confluent-kafka = "^1.8.2"
avro = "^1.11.0"
fastavro = "^1.4.11"
boto3 = "^1.22.5"
colored = "^1.4.3"
colorlog = "^6.6.0"
PyYAML = "^6.0"
click = "^8.1.3"

[tool.poetry.dev-dependencies]
requests = "^2.27.1"
pytest-bdd = "^5.0.0"
pytest-watch = "^4.2.0"
pytest = "^7.1.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
(
  /(
    |\.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | \.feature
    | .*assets/
    | .*tests/*
  )/
)
'''
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
order_by_type = true
balanced_wrapping = true
force_grid_wrap = 0
lines_after_imports = -1
lines_between_sections = 1
lines_between_types =  0
force_alphabetical_sort_within_sections = true
line_length = 80
float_to_top = true
sections = [
  "FUTURE",
  "STDLIB",
  "FIRSTPARTY",
  "THIRDPARTY",
  "LOCALFOLDER"
]

known_standard_library = [
  "base64",
  "builtins",
  "collections",
  "contextlib",
  "datetime",
  "enum",
  "functools",
  "glob",
  "importlib",
  "io",
  "time",
  "json",
  "logging",
  "operator",
  "os",
  "re",
  "struct",
  "textwrap",
  "tempfile",
  "typing",
  "uuid",
]
known_third_party = [
  "avro",
  "boto3",
  "botocore",
  "confluent-kafka",
  "chardet",
  "click",
  "dateutil",
  "requests",
  "pytest",
  "pytest_bdd",
  "pytz",
  "yaml"
]
known_local_folder = [
  "handler",
  "helpers",
  "tests",
  "common",
  "settings",
  "steps",
  "kafka",
  "aws"
]
